package ma.fullstackclone.airbnb.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PropertyImageAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPropertyImageAllPropertiesEquals(PropertyImage expected, PropertyImage actual) {
        assertPropertyImageAutoGeneratedPropertiesEquals(expected, actual);
        assertPropertyImageAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPropertyImageAllUpdatablePropertiesEquals(PropertyImage expected, PropertyImage actual) {
        assertPropertyImageUpdatableFieldsEquals(expected, actual);
        assertPropertyImageUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPropertyImageAutoGeneratedPropertiesEquals(PropertyImage expected, PropertyImage actual) {
        assertThat(expected)
            .as("Verify PropertyImage auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPropertyImageUpdatableFieldsEquals(PropertyImage expected, PropertyImage actual) {
        assertThat(expected)
            .as("Verify PropertyImage relevant properties")
            .satisfies(e -> assertThat(e.getImageUrl()).as("check imageUrl").isEqualTo(actual.getImageUrl()))
            .satisfies(e -> assertThat(e.getIsMain()).as("check isMain").isEqualTo(actual.getIsMain()))
            .satisfies(e -> assertThat(e.getCaption()).as("check caption").isEqualTo(actual.getCaption()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPropertyImageUpdatableRelationshipsEquals(PropertyImage expected, PropertyImage actual) {
        assertThat(expected)
            .as("Verify PropertyImage relationships")
            .satisfies(e -> assertThat(e.getProperty()).as("check property").isEqualTo(actual.getProperty()));
    }
}
